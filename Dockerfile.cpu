ARG CUDA_VERSION
ARG UBUNTU_VERSION=24.04

FROM ubuntu:${UBUNTU_VERSION}

ARG DEBIAN_FRONTEND=noninteractive
ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8

ARG INSTALL_TORCH
ARG LLVM_VERSION
ARG IMAGE_VERSION
ARG IMAGE_NAME

LABEL maintainer="JamesNULLiu jamesnulliu@gmail.com"
LABEL version=${IMAGE_VERSION}

ENV IMAGE_NAME=${IMAGE_NAME}
ENV VCPKG_ROOT=/opt/vcpkg
ENV VCPKG_HOME=/opt/vcpkg
ENV UV_HOME=/opt/uv
ENV ENV_SETUP_FILE=/etc/local/env_setup.sh

SHELL ["/bin/bash", "-c"]

# Some basic tools
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y \
    apt-utils lsb-release software-properties-common gnupg git acl sed\
    vim-gtk3 wget p7zip-full ninja-build curl jq pkg-config ssh ccache \
    build-essential gdb htop tmux kmod \
    libssl-dev && \
    echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" \
        | debconf-set-selections && \
    apt-get --reinstall install -y ttf-mscorefonts-installer && fc-cache -f -v

# Vcpkg
RUN git clone https://github.com/microsoft/vcpkg.git ${VCPKG_HOME} && \ 
    cd ${VCPKG_HOME} && ./bootstrap-vcpkg.sh 

# CMake
RUN wget -O /tmp/kitware-archive.sh \
    https://apt.kitware.com/kitware-archive.sh && \
    bash /tmp/kitware-archive.sh && \
    apt-get update && apt-get install -y cmake 

# LLVM
RUN wget -O /tmp/llvm.sh https://apt.llvm.org/llvm.sh && \
    chmod +x /tmp/llvm.sh && \
    /tmp/llvm.sh ${LLVM_VERSION} && \
    apt-get update && apt-get install -y \
    clang-${LLVM_VERSION}         lldb-${LLVM_VERSION} \
    clang-tools-${LLVM_VERSION}   libclang-${LLVM_VERSION}-dev \
    clang-format-${LLVM_VERSION}  python3-clang-${LLVM_VERSION} \
    clangd-${LLVM_VERSION}        clang-tidy-${LLVM_VERSION} \
    lldb-${LLVM_VERSION}          libc++-${LLVM_VERSION}-dev \
    libc++abi-${LLVM_VERSION}-dev libomp-${LLVM_VERSION}-dev && \
    ln -s /usr/bin/clang-${LLVM_VERSION}         /usr/bin/clang && \
    ln -s /usr/bin/clang++-${LLVM_VERSION}       /usr/bin/clang++ && \
    ln -s /usr/bin/clangd-${LLVM_VERSION}        /usr/bin/clangd && \
    ln -s /usr/bin/clang-tidy-${LLVM_VERSION}    /usr/bin/clang-tidy && \
    ln -s /usr/bin/clang-format-${LLVM_VERSION}  /usr/bin/clang-format && \
    ln -s /usr/bin/lldb-${LLVM_VERSION}          /usr/bin/lldb 

# Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# Config files
COPY data/vimrc /etc/vim/vimrc
COPY data/env_setup.sh ${ENV_SETUP_FILE}
COPY data/.inputrc data/.bashrc data/.tmux.conf /root/
COPY data/.inputrc data/.bashrc data/.tmux.conf /etc/skel/
COPY data/create-shared-dir /usr/local/bin/

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | \
        env UV_INSTALL_DIR="${UV_HOME}" UV_NO_MODIFY_PATH=1 sh

# Some final steps
RUN apt-get update && apt-get upgrade -y && apt-get autoremove -y && \
    apt-get clean && rm -rf /var/lib/apt/lists/* && \
    git config --system --unset-all user.name  || true && \
    git config --system --unset-all user.email || true && \
    git config --global --unset-all user.name  || true && \
    git config --global --unset-all user.email || true

COPY data/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh
ENTRYPOINT [ "entrypoint.sh" ]
CMD [ "bash" ]